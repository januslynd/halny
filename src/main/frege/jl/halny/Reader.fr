module jl.halny.Reader where

import jl.halny.File
import jl.halny.Util

parse :: String -> IO [[(String,String)]]
parse filePath = do
    lines <- readLines filePath
    let headers = readHeaderRow lines
        rows    = readRows lines
    return $ getRows headers rows

readHeaderRow :: [String] -> [String]
readHeaderRow lines = parseRowWithComma $ head lines

readRows :: [String] -> [[String]]
readRows rows = map parseRowWithComma $ safeTail rows

parseRow :: Regex -> String -> [String]
parseRow separator line = separator.splitted line

parseRowWithComma :: String -> [String]
parseRowWithComma = parseRow '\,'

getRows :: [String] -> [[String]] -> [[(String,String)]]
getRows headers rows = fmap (zip headers) rows

